#!/bin/bash
#
# This script allows you to syncronize a database table with banned ips, with your fastly CDN
# it allows you to easily ban_ips from your application
# drupal already has a `autoban` script that creates these automagically
# easiest way to use this is to trigger it in a cron script
#
# bash ./autoban_in_fastly.sh
#
# crons:
#     autoban:
#         spec: '*/7 * * * *'
#         commands:
#             start: ./autoban_in_fastly.sh
#         shutdown_timeout: 31

# CHANGE THIS to YOUR specific use case. For drupal autoban this can be ban_ip or blocked_ips: see for example https://www.drupal.org/project/autoban
TABLE_TO_GET_IPS_FROM="ban_ip" 

DATABASE_HOST="$(echo $PLATFORM_RELATIONSHIPS | base64 -d | jq  -r '. | to_entries[] | .value[] | select(.scheme == "mysql") | .host')"

# get list of ips from the database
IPS_TO_BAN=$(mysql --silent --raw --skip-column-names -h $DATABASE_HOST -e "SELECT ip from $TABLE_TO_GET_IPS_FROM" main | grep -v ip)
if [[ "$IPS_TO_BAN" == "" ]]; then
    echo "nothing to ban"
    exit 0
fi

# get the current fastly ip list to compare if the new IPS are already in fastly
# get fastly service version
FASTLY_SERVICE_VERSION=$(
curl -s -H "Fastly-Key: $FASTLY_API_TOKEN" \
    "https://api.fastly.com/service/${FASTLY_SERVICE_ID}/details" \
    | jq -r ".active_version.number"
)

# For all autogenerated ip block rules, the name is this:
ACL_RULE_NAME="Generated_by_IP_block_list"
# Need to fetch its ID before we can find its content.
ACL_ID=$(curl -s -H "Fastly-Key: $FASTLY_API_TOKEN" "https://api.fastly.com/service/${FASTLY_SERVICE_ID}/version/${FASTLY_SERVICE_VERSION}/acl/${ACL_RULE_NAME}" | jq -r ".id")
CURRENTLY_BLOCKED_IPS=$(curl -s -H "Fastly-Key: $FASTLY_API_TOKEN" "https://api.fastly.com/service/${FASTLY_SERVICE_ID}/acl/${ACL_ID}/entries" | jq -r '.[].ip' | xargs)

read -a array <<< $CURRENTLY_BLOCKED_IPS
echo "Current IPS already blocked: ${#array[@]}"

for (( i=0; i<=${#array[@]}; i++ )); 
do
    if [[ "${array[$i]}" == "" ]]; then
        break
    fi
    if [ $(( $i % 2)) -eq 0 ]; then 
        JUSTIFIED_IP=$(printf '%-17s' "${array[$i]}")
        echo -n "$JUSTIFIED_IP : "
    else 
        echo "${array[$i]}"
    fi    
done
echo ""
echo "-----------------------"


for IP_TO_BAN in $IPS_TO_BAN
do
    JUSTIFIED_IP=$(printf '%-17s' "$IP_TO_BAN")
    # check if the IP is already banned
    if [[ ! " $CURRENTLY_BLOCKED_IPS " =~ " $IP_TO_BAN " ]]; then
        echo "Adding   $JUSTIFIED_IP to block list"

        # add each ip found in `ban_ip`
        curl -X POST -s -H "Fastly-Key: $FASTLY_API_TOKEN" -H "Content-Type: application/json"  -H "Accept: application/json"  \
            "https://api.fastly.com/service/${FASTLY_SERVICE_ID}/acl/${ACL_ID}/entry" -d "{\"ip\":\"$IP_TO_BAN\", \"comment\": \"autoban\"}"
    else
        echo "Skipping $JUSTIFIED_IP because: already on list"
    fi
done



